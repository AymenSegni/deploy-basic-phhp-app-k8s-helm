apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-phpfpm
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}-phpfpm
    spec:
      containers:
      - name: {{ template "fullname" . }}-phpfpm
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.phpfpmService.phpfpmPort }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.phpfpmService.phpfpmPort }}
          initialDelaySeconds: 10
          timeoutSeconds: 5
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-nginx
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}-nginx
    spec:
      containers:
      - name: {{ template "fullname" . }}-nginx
        image: "bitnami/nginx:latest"
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        ports:
        - name: http
          containerPort: {{ .Values.nginxService.internalPort }}
        - name: https
          containerPort: 8443
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - name: nginx-config
          mountPath: /bitnami/nginx/conf/vhosts
      volumes:
      - name: nginx-config
        configMap: 
          name: {{ template "fullname" . }}    
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-mariadb
  labels:
    app: {{ template "fullname" . }}-mariadb
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        release: {{ .Release.Name }}
        component: "{{.Release.Name}}"
        nautilian.snapshot.enabled: "true"
    spec:
      containers:
      - name: {{ template "fullname" . }}-mariadb
        image: mariadb:latest
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}

        env:
        - name: MYSQLDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: mysqldb-root-password
        - name: MARIADB_USER
          value: {{ default "" .Values.mariadbUser | quote }}
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: mariadb-password
        - name: MARIADB_DATABASE
          value: {{ default "" .Values.mariadbDatabase | quote }}
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        ports:
        - name: mysql
          containerPort: 3306
        # livenessProbe:
        #   exec:
        #     command:
        #     - mysqladmin
        #     - ping
        #   initialDelaySeconds: 30
        #   timeoutSeconds: 5
        # readinessProbe:
        #   exec:
        #     command:
        #     - mysqladmin
        #     - ping
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 1
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
      volumes:
      - name: config
        configMap:
          name: {{ template "fullname" . }}
      - name: data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
